name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch'
        required: true
        default: main

jobs:
  cli-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.head_ref || github.ref_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Start MLflow server (no jupyter)
        run: |
          ./start_services.sh --no-jupyter -d

      - name: Install poetry
        run: pipx install "poetry == 1.8.5"

      - name: Remove existing virtual environment
        run: |
          poetry env remove python || true

      # TODO: get rid of the POETRY_INSTALLER_MAX_WORKERS env var once we get rid of plugins
      - name: Install dependencies
        run: |
          poetry cache clear --no-interaction --all .
          POETRY_INSTALLER_MAX_WORKERS=1 poetry install --with test --no-cache

      - name: Run all tests
        run: MLFLOW_TRACKING_URI=http://localhost:8080 poetry run pytest

      - name: Stop MLflow server
        run: docker compose down

  jupyter-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch || github.head_ref || github.ref_name }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Start MLflow server with jupyter and vllm
        run: |
          ./start_services.sh -d --vllm

      - name: Copy test script to Jupyter container
        run: |
          docker cp tests/notebooks/run.py modelplane-jupyter-1:/app/test_notebooks.py

      - name: Execute all notebooks
        run: |
          docker exec modelplane-jupyter-1 poetry run python /app/test_notebooks.py

          
      - name: Stop MLflow server
        run: docker compose down
